import numpy as npimport pandas as pdimport pickleimport streamlit as stfrom sklearn.preprocessing import StandardScalermodel_rf= pickle.load(open('model_rf.pkl','rb'))def pred(features):    return model_rf.predict(features)    def main():    st.title("CO2 Emission Prediction App")                       def main():    st.title("Co2 prediction")    cylinders = st.number_input("Enter no of cylinders")    fuel_consumption_comb_mpg = st.number_input("Enter fuel_consumption_comb_mpg")    transmission_Automatedmanual = st.number_input("Enter transmission_Automatedmanual")    transmission_Automatic = st.number_input("Enter transmission_Automatic")    transmission_Continuouslyvariable = st.number_input("Enter transmission_Continuouslyvariable")    transmission_Manual = st.number_input("transmission_Manual")    fuel_type_Ethanol = st.number_input("fuel_type_Ethanol")    fuel_type_Naturalgas = st.number_input("fuel_type_Naturalgas")    fuel_type_Premiumgasoline = st.number_input("fuel_type_Premiumgasoline")    make_1_Luxury = st.number_input("make_1_Luxury")    make_1_Premium = st.number_input("make_1_Premium")    make_1_Sports = st.number_input("make_1_Sports")    Vehicle_Class_Type_sedan = st.number_input("Vehicle_Class_Type_sedan")    Vehicle_Class_Type_suv = st.number_input("Vehicle_Class_Type_suv")    Vehicle_Class_Type_truck = st.number_input("Vehicle_Class_Type_truck")        if st.button("Predict CO2 Emission"):        features = [[cylinders,fuel_consumption_comb_mpg,transmission_Automatedmanual,transmission_Automatic,transmission_Continuouslyvariable,transmission_Manual,fuel_type_Ethanol,fuel_type_Naturalgas,fuel_type_Premiumgasoline,make_1_Luxury,make_1_Premium,make_1_Sports,Vehicle_Class_Type_sedan,Vehicle_Class_Type_suv,Vehicle_Class_Type_truck]]        prediction = pred(features)        st.write(f"Estimated CO2 Emission: {prediction[0]:.2f} g/km")if __name__ == "__main__":    main()   